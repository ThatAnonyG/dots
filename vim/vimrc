set nocompatible

" File type settings --- {{{

" Detect the file type of the current file
filetype on
" Enable plugins and load file type specific plugins
filetype plugin on
" Load indent file for the current file type
filetype indent on

" }}}

" Editor settings --- {{{

" Enable syntax highlighting
syntax on
" Activate line numbers
set number
" Highlight the line cursor is on
set cursorline
" Set tab length
set tabstop=2
" Set indentation size
set shiftwidth=2
" Make tabs use spaces
set expandtab
" Let tabstop insert spaces instead of tabs
set softtabstop=0
" Don't wrap long lines
set nowrap
" Highlight characters as I type in search string
set incsearch
" Show matching words during a search
set showmatch
" Partially match commands while typing
set showcmd
" Show the current active vim mode
set showmode
" Limit scroll limit to N lines
set scrolloff=10
" Do not save backup files
set nobackup
" Highlight search results
set hlsearch
" Set command history
set history=1000
" Set backspace behavior
set backspace=eol,start,indent
" Set cursor behavior
set whichwrap=<,>,h,l,[,]
" Enable auto indentation
set autoindent

" }}}

" Autocomplete Settings --- {{{

" Enable auto completion on TAB
set wildmenu
" Enable Bash shell like behaviour
set wildmode=list:longest
" Ignore files with these extensions
set wildignore=*.jpg,*.png,*.gif

" }}}

" Plugins Related --- {{{

call plug#begin('~/.vim/plugged')

" Nord Theme
Plug 'arcticicestudio/nord-vim'

" Language features for .yuck files
Plug 'elkowar/yuck.vim'

" Project tree visualizer
Plug 'lambdalisue/fern.vim'

" Amazing file searching
Plug 'ctrlpvim/ctrlp.vim'

" The OG prettier
Plug 'prettier/vim-prettier', { 'do': 'yarn install --frozen-lockfile --production' }

" COC (Autocomplete and Lint)
Plug 'neoclide/coc.nvim', { 'branch': 'release' }

" Bracket pair colors
Plug 'junegunn/rainbow_parentheses.vim'

call plug#end()

" Set editor color scheme
colorscheme nord

" }}}

" Custom Vimscript --- {{{

" Custom mappings
inoremap jj <esc>
nnoremap <silent> <Leader>h :nohl<CR>

" Enable folding
augroup filetype_vim
  autocmd!
  autocmd FileType vim setlocal foldmethod=marker
augroup END

" Disable netrw
let g:loaded_netrw = 1
let g:loaded_netrwPlugin = 1
let g:loaded_netrwSettings = 1
let g:loaded_netrwFileHandlers = 1

augroup custom-fern-hijack
  autocmd!
  autocmd BufEnter * ++nested call s:hijack_directory()
augroup END

function! s:hijack_directory() abort
  let path = expand('%:p')
  if !isdirectory(path)
    return
  endif
  bwipeout %
  execute printf('Fern %s', fnameescape(path))
endfunction

" Fern configuration
let g:fern#disable_default_mappings = 1
let g:fern#default_hidden = 1
let g:fern#renderer#default#leaf_symbol = " "
let g:fern#renderer#default#collapsed_symbol = " "
let g:fern#renderer#default#expanded_symbol = " "

noremap <silent> <Leader>f :Fern . -drawer -reveal=% -toggle -width=30<CR><C-w>=

function! FernInit() abort
  nmap <buffer><expr>
      \ <Plug>(fern-my-open-expand-collapse)
      \ fern#smart#leaf(
      \   "\<Plug>(fern-action-open:select)",
      \   "\<Plug>(fern-action-expand)",
      \   "\<Plug>(fern-action-collapse)",
      \ )
  nmap <buffer> <CR> <Plug>(fern-my-open-expand-collapse)
  nmap <buffer> n <Plug>(fern-action-new-path)
  nmap <buffer> d <Plug>(fern-action-remove)
  nmap <buffer> m <Plug>(fern-action-move)
  nmap <buffer> M <Plug>(fern-action-rename)
  nmap <buffer> r <Plug>(fern-action-reload)
  nmap <buffer> v <Plug>(fern-action-open:vsplit)
  nmap <buffer><nowait> < <Plug>(fern-action-leave)
  nmap <buffer><nowait> > <Plug>(fern-action-enter)
endfunction

augroup FernGroup
  autocmd!
  autocmd FileType fern call FernInit()
augroup END

" Control-P config
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'

" Screw arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
inoremap <Up> <NOP>
inoremap <Down> <NOP>
inoremap <Left> <NOP>
inoremap <Right> <NOP>

" Bracker pair color configs
let g:rainbow#max_level = 16
let g:rainbow#pairs = [['(', ')'], ['[', ']'], ['{', '}']]

augroup RainbowBracketGroup
  autocmd!
  autocmd FileType * RainbowParentheses
augroup END

" }}}

" Status Line Config --- {{{

" Clear the status line
set statusline=
" Left side view
set statusline+=\ %F\ %M\ %Y\ %R
" Add divider between
set statusline+=%=
" Right side view
set statusline+=row:\ %l\ col:\ %c
" Show the status line at
set laststatus=2

" }}}

